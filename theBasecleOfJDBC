import java.sql.Driver;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

import org.junit.Test;

/*
 * jdbc连库
 */
public class Jdbc_connection {
	private String url = "jdbc:mysql://localhost:3306/test_1";
	private String user = "root";
	private String password = "123123";
	
	@Test
	public void simple1() throws SQLException{
		//连接数据库最开始的简单小demo。
		//1.创建驱动程序类的对象
		Driver driver = new com.mysql.jdbc.Driver(); //导java.sql包
			
			Properties props = new Properties();
			/*
			props.setProperty("user", "root");
			props.setProperty("password", "123123");
			*/
			props.setProperty("user", user);
			props.setProperty("password", password);
			//2.连接数据库，用driver下的connect方法,会返回一个connection的对象,且会抛出异常
			Connection conn = driver.connect(url, props);//参数：url用于定位数据库，info为properties对象，所以需在上面创建。
			//3.打印conn，有内容则连接成功，null则失败
			System.out.println(""+conn+"demo1");
		
			//4.完善：第一步中Driver为null，jdk中提供的是接口，不是具体实现类。
			//所以，需要导数据库厂商提供的具体实现类。
			/*
			 * jar包复制过来-->add to build path。
			 */
			//5.将第一步的Driver driver = null;改为Driver driver = new com.mysql.jdbc.Driver(); 
			
		
	}
	
	@Test
	public void simple2() throws SQLException{
		/*
		 * 第二个小demo：使用驱动管理器类来连接数据库
		 */
		//1.注册驱动程序
		Driver driver = new com.mysql.jdbc.Driver(); //导java.sql包
		DriverManager.registerDriver(driver);
		//可以注册多个驱动程序 比如：
		/*
		 * Driver driver1 = new com.mysql.jdbc.Driver();
		 * Driver driver2= new com.oracle.jdbc.Driver();
		 * Driver driver3 = new com.sqlserver.jdbc.Driver();
		 * 
		 * DriverManager.registerDriver(driver1);
		 * DriverManager.registerDriver(driver2);
		 * DriverManager.registerDriver(driver3);
		 */
		
		//2.连接到具体的数据库
		Connection conn = DriverManager.getConnection(url, user, password);
		
		System.out.println(""+conn+"demo2");
		
		
		
		
	}
	@Test
	public void simple3() throws Exception{
		/*
		 * 由于public void simple2()中的：
		 * Driver driver = new com.mysql.jdbc.Driver()代码中包含了DriverManager.registerDriver(driver)操作。
		 * 原因：Driver driver = new com.mysql.jdbc.Driver()中有一个静态代码块，里面包含DriverManager.registerDriver(driver)
		 * 所以我们不需要new com.mysql.jdbc.Driver()，只需得到字节码对象，使静态代码块运行一次即可。
		 * 
		 * 故有以下优化
		 */
		//1.通过得到字节码对象，运行静态代码块，从而注册驱动程序
		Class.forName("com.mysql.jdbc.Driver");
		//2.连接
		Connection conn = DriverManager.getConnection(url, user, password);
		
		System.out.println(""+conn+"demo3");
		
	}
	
} 
/*
 * 总结：
 * 连库使用public void simple3()这种方式。
 */
